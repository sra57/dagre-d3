{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","index.js","dagre-d3.core.js","lib/arrows.js","lib/create-clusters.js","lib/create-edge-labels.js","lib/create-edge-paths.js","lib/create-nodes.js","lib/d3.js","lib/dagre.js","lib/graphlib.js","lib/intersect/index.js","lib/intersect/intersect-circle.js","lib/intersect/intersect-ellipse.js","lib/intersect/intersect-line.js","lib/intersect/intersect-node.js","lib/intersect/intersect-polygon.js","lib/intersect/intersect-rect.js","lib/label/add-html-label.js","lib/label/add-label.js","lib/label/add-svg-label.js","lib/label/add-text-label.js","lib/lodash.js","lib/position-clusters.js","lib/position-edge-labels.js","lib/position-nodes.js","lib/render.js","lib/shapes.js","lib/util.js","lib/version.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dagreD3","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","graphlib","dagre","intersect","render","util","version","./lib/dagre","./lib/graphlib","./lib/intersect","./lib/render","./lib/util","./lib/version","2","normal","parent","id","edge","type","marker","append","attr","path","style","applyStyle","vee","undirected","default","./util","3","createClusters","selection","clusters","nodes","filter","v","isSubgraph","svgClusters","selectAll","data","remove","enter","node","applyTransition","each","thisGroup","d3","select","labelGroup","addLabel","clusterLabelPos","c","domCluster","exit","./label/add-label","4","createEdgeLabels","svgEdgeLabels","edges","edgeToId","classed","label","bbox","getBBox","labelId","_","has","width","height","./d3","./lodash","5","createEdgePaths","arrows","svgPaths","adjustEdgeForCategories","domEdge","elem","applyClass","arrowheadId","uniqueId","makeFragmentRef","location","href","calcPoints","arrowhead","forEach","source","hasOwnProperty","edgesInCategory","outEdges","inSameCategory","categoryIndex","indexOf","pctPlacement","categoryWidth","numCategories","nodeStartXPos","x","points","e1","e2","url","fragmentId","baseUrl","split","tail","head","w","slice","unshift","intersectNode","push","createLine","line","svg","d","y","interpolate","lineInterpolate","tension","Number","lineTension","getCoords","matrix","ownerSVGElement","getScreenCTM","inverse","multiply","translate","svgPathsEnter","sourceElem","range","map","svgPathExit","getTotalLength","./intersect/intersect-node","6","createNodes","shapes","simpleNodes","svgNodes","labelDom","shape","pick","paddingLeft","paddingRight","paddingTop","paddingBottom","shapeSvg","shapeBBox","7","8","undefined","9","10","circle","ellipse","polygon","rect","./intersect-circle","./intersect-ellipse","./intersect-node","./intersect-polygon","./intersect-rect","11","intersectCircle","rx","point","intersectEllipse","12","ry","cx","cy","px","py","det","Math","sqrt","dx","abs","dy","13","intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","sameSign","14","15","intersectPolygon","polyPoints","x1","y1","intersections","minX","POSITIVE_INFINITY","minY","entry","min","left","top","sort","p","q","pdx","pdy","distp","qdx","qdy","distq","console","log","./intersect-line","16","intersectRect","sx","sy","h","17","addHtmlLabel","root","fo","div","insert","html","labelStyle","client","getBoundingClientRect","../util","18","labelSvg","labelType","addSVGLabel","addTextLabel","labelBBox","./add-html-label","./add-svg-label","./add-text-label","19","domNode","appendChild","20","lines","processEscapeSequences","text","ch","newText","escaped","21","lodash","22","positionClusters","created","23","positionEdgeLabels","24","positionNodes","25","fn","preProcessGraph","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","layout","postProcessGraph","value","arguments","children","defaults","paddingX","paddingY","padding","NODE_DEFAULT_ATTRS","k","_prevWidth","_prevHeight","EDGE_DEFAULT_ATTRS","name","empty","./arrows","./create-clusters","./create-edge-labels","./create-edge-paths","./create-nodes","./dagre","./position-clusters","./position-edge-labels","./position-nodes","./shapes","26","max","diamond","SQRT2","join","./intersect/intersect-circle","./intersect/intersect-ellipse","./intersect/intersect-polygon","./intersect/intersect-rect","27","escapeId","str","String","replace","ID_DELIM","dom","styleFn","classFn","otherClasses","graph","isPlainObject","transition","isFunction","28"],"mappings":"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","file":"dagre-d3.core.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * @license\n * Copyright (c) 2012-2013 Chris Pettitt\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nmodule.exports =  {\n  graphlib: require(\"./lib/graphlib\"),\n  dagre: require(\"./lib/dagre\"),\n  intersect: require(\"./lib/intersect\"),\n  render: require(\"./lib/render\"),\n  util: require(\"./lib/util\"),\n  version: require(\"./lib/version\")\n};\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.dagreD3 = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * @license\n * Copyright (c) 2012-2013 Chris Pettitt\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nmodule.exports =  {\n  graphlib: require(\"./lib/graphlib\"),\n  dagre: require(\"./lib/dagre\"),\n  intersect: require(\"./lib/intersect\"),\n  render: require(\"./lib/render\"),\n  util: require(\"./lib/util\"),\n  version: require(\"./lib/version\")\n};\n\n},{\"./lib/dagre\":8,\"./lib/graphlib\":9,\"./lib/intersect\":10,\"./lib/render\":25,\"./lib/util\":27,\"./lib/version\":28}],2:[function(require,module,exports){\nvar util = require(\"./util\");\n\nmodule.exports = {\n  \"default\": normal,\n  \"normal\": normal,\n  \"vee\": vee,\n  \"undirected\": undirected\n};\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 L 4 5 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 5 L 10 5\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\n},{\"./util\":27}],3:[function(require,module,exports){\nvar util = require(\"./util\"),\n    addLabel = require(\"./label/add-label\");\n\nmodule.exports = createClusters;\n\nfunction createClusters(selection, g) {\n  var clusters = g.nodes().filter(function(v) { return util.isSubgraph(g, v); }),\n      svgClusters = selection.selectAll(\"g.cluster\")\n        .data(clusters, function(v) { return v; });\n\n  svgClusters.selectAll(\"*\").remove();\n  svgClusters.enter()\n    .append(\"g\")\n      .attr(\"class\", \"cluster\")\n      .attr(\"id\",function(v){\n          var node = g.node(v);\n          return node.id;\n      })\n      .style(\"opacity\", 0);\n\n  util.applyTransition(svgClusters, g)\n    .style(\"opacity\", 1);\n\n  svgClusters.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this);\n    d3.select(this).append(\"rect\");\n    var labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\");\n    addLabel(labelGroup, node, node.clusterLabelPos);\n  });\n\n  svgClusters.selectAll(\"rect\").each(function(c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  util.applyTransition(svgClusters.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgClusters;\n}\n\n},{\"./label/add-label\":18,\"./util\":27}],4:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createEdgeLabels;\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll(\"g.edgeLabel\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  svgEdgeLabels.selectAll(\"*\").remove();\n  svgEdgeLabels.enter()\n    .append(\"g\")\n      .classed(\"edgeLabel\", true)\n      .style(\"opacity\", 0);\n  svgEdgeLabels.each(function(e) {\n    var edge = g.edge(e),\n        label = addLabel(d3.select(this), g.edge(e), 0, 0).classed(\"label\", true),\n        bbox = label.node().getBBox();\n\n    if (edge.labelId) { label.attr(\"id\", edge.labelId); }\n    if (!_.has(edge, \"width\")) { edge.width = bbox.width; }\n    if (!_.has(edge, \"height\")) { edge.height = bbox.height; }\n  });\n\n  util.applyTransition(svgEdgeLabels.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgEdgeLabels;\n}\n\n},{\"./d3\":7,\"./label/add-label\":18,\"./lodash\":21,\"./util\":27}],5:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    intersectNode = require(\"./intersect/intersect-node\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\nmodule.exports = createEdgePaths;\n\nfunction createEdgePaths(selection, g, arrows) {\n  var svgPaths = selection.selectAll(\"g.edgePath\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  // Update the first point in the edge so it is shown in the correct category.\n  adjustEdgeForCategories(g);\n\n  enter(svgPaths, g);\n  exit(svgPaths, g);\n\n  util.applyTransition(svgPaths, g)\n    .style(\"opacity\", 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function(e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr(\"id\", edge.id);\n    }\n\n    util.applyClass(domEdge, edge[\"class\"],\n      (domEdge.classed(\"update\") ? \"update \" : \"\") + \"edgePath\");\n  });\n\n  svgPaths.selectAll(\"path.path\")\n    .each(function(e) {\n      var edge = g.edge(e);\n      edge.arrowheadId = _.uniqueId(\"arrowhead\");\n\n      var domEdge = d3.select(this)\n        .attr(\"marker-end\", function() {\n            return \"url(\" + makeFragmentRef(location.href, edge.arrowheadId) + \")\";\n        })\n        .style(\"fill\", \"none\");\n\n      util.applyTransition(domEdge, g)\n        .attr(\"d\", function(e) { return calcPoints(g, e); });\n\n      util.applyStyle(domEdge, edge.style);\n    });\n\n  svgPaths.selectAll(\"defs *\").remove();\n  svgPaths.selectAll(\"defs\")\n    .each(function(e) {\n      var edge = g.edge(e),\n          arrowhead = arrows[edge.arrowhead];\n      arrowhead(d3.select(this), edge.arrowheadId, edge, \"arrowhead\");\n    });\n\n  return svgPaths;\n}\n\nfunction adjustEdgeForCategories(g) {\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e),\n        source = g.node(e.v);\n    // Only perform this adjustment if the edge & source node has the required\n    // properties.\n    if (!edge.hasOwnProperty(\"categoryIndex\")\n        || !source.hasOwnProperty(\"numCategories\")) {\n      return;\n    }\n\n    var edgesInCategory = g.outEdges(e.v).filter(inSameCategory(g, e));\n    var categoryIndex = edgesInCategory.indexOf(e);\n    var pctPlacement = (categoryIndex + 1)/(edgesInCategory.length + 1);\n    var categoryWidth = source.width/source.numCategories;\n    var nodeStartXPos = source.x - source.width/2;\n\n    // Assign a new x value for the first point so it is in the correct category.\n    edge.points[0].x = nodeStartXPos + categoryWidth * edge.categoryIndex\n        + pctPlacement * categoryWidth;\n  });\n}\n\nfunction inSameCategory(g, e1) {\n  return function(e2) {\n    return g.edge(e1).categoryIndex === g.edge(e2).categoryIndex;\n  };\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split(\"#\")[0];\n  return baseUrl + \"#\" + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e),\n      tail = g.node(e.v),\n      head = g.node(e.w);\n  var points;\n  if (edge.hasOwnProperty(\"categoryIndex\")\n      && tail.hasOwnProperty(\"numCategories\")) {\n    points = edge.points.slice(0, edge.points.length - 1);\n  } else {\n    points = edge.points.slice(1, edge.points.length - 1);\n    points.unshift(intersectNode(tail, points[0]));\n  }\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  var line = d3.svg.line()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\n  if (_.has(edge, \"lineInterpolate\")) {\n    line.interpolate(edge.lineInterpolate);\n  }\n\n  if (_.has(edge, \"lineTension\")) {\n    line.tension(Number(edge.lineTension));\n  }\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox(),\n      matrix = elem.ownerSVGElement.getScreenCTM()\n        .inverse()\n        .multiply(elem.getScreenCTM())\n        .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter()\n    .append(\"g\")\n      .attr(\"class\", \"edgePath\")\n      .style(\"opacity\", 0);\n  svgPathsEnter.append(\"path\")\n    .attr(\"class\", \"path\")\n    .attr(\"d\", function(e) {\n      var edge = g.edge(e),\n          sourceElem = g.node(e.v).elem,\n          points = _.range(edge.points.length).map(function() { return getCoords(sourceElem); });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append(\"defs\");\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  util.applyTransition(svgPathExit.select(\"path.path\"), g)\n    .attr(\"d\", function(e) {\n      var source = g.node(e.v);\n\n      if (source) {\n        var points = _.range(this.getTotalLength()).map(function() { return source; });\n        return createLine({}, points);\n      } else {\n        return d3.select(this).attr(\"d\");\n      }\n    });\n}\n\n},{\"./d3\":7,\"./intersect/intersect-node\":14,\"./lodash\":21,\"./util\":27}],6:[function(require,module,exports){\n\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createNodes;\n\nfunction createNodes(selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function(v) { return !util.isSubgraph(g, v); });\n  var svgNodes = selection.selectAll(\"g.node\")\n    .data(simpleNodes, function(v) { return v; })\n    .classed(\"update\", true);\n\n  svgNodes.selectAll(\"*\").remove();\n  svgNodes.enter()\n    .append(\"g\")\n      .attr(\"class\", \"node\")\n      .style(\"opacity\", 0);\n  svgNodes.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this),\n        labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\"),\n        labelDom = addLabel(labelGroup, node),\n        shape = shapes[node.shape],\n        bbox = _.pick(labelDom.node().getBBox(), \"width\", \"height\");\n\n    node.elem = this;\n\n    if (node.id) { thisGroup.attr(\"id\", node.id); }\n    if (node.labelId) { labelGroup.attr(\"id\", node.labelId); }\n    util.applyClass(thisGroup, node[\"class\"],\n      (thisGroup.classed(\"update\") ? \"update \" : \"\") + \"node\");\n\n    if (_.has(node, \"width\")) { bbox.width = node.width; }\n    if (_.has(node, \"height\")) { bbox.height = node.height; }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\"transform\", \"translate(\" +\n      ((node.paddingLeft - node.paddingRight) / 2) + \",\" +\n      ((node.paddingTop - node.paddingBottom) / 2) + \")\");\n\n    var shapeSvg = shape(d3.select(this), bbox, node);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  util.applyTransition(svgNodes.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgNodes;\n}\n\n},{\"./d3\":7,\"./label/add-label\":18,\"./lodash\":21,\"./util\":27}],7:[function(require,module,exports){\n// Stub to get D3 either via NPM or from the global object\nmodule.exports = window.d3;\n\n},{}],8:[function(require,module,exports){\n/* global window */\n\nvar dagre;\n\nif (require) {\n  try {\n    dagre = require(\"dagre\");\n  } catch (e) {}\n}\n\nif (!dagre) {\n  dagre = window.dagre;\n}\n\nmodule.exports = dagre;\n\n},{\"dagre\":undefined}],9:[function(require,module,exports){\n/* global window */\n\nvar graphlib;\n\nif (require) {\n  try {\n    graphlib = require(\"graphlib\");\n  } catch (e) {}\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;\n\n},{\"graphlib\":undefined}],10:[function(require,module,exports){\nmodule.exports = {\n  node: require(\"./intersect-node\"),\n  circle: require(\"./intersect-circle\"),\n  ellipse: require(\"./intersect-ellipse\"),\n  polygon: require(\"./intersect-polygon\"),\n  rect: require(\"./intersect-rect\")\n};\n\n},{\"./intersect-circle\":11,\"./intersect-ellipse\":12,\"./intersect-node\":14,\"./intersect-polygon\":15,\"./intersect-rect\":16}],11:[function(require,module,exports){\nvar intersectEllipse = require(\"./intersect-ellipse\");\n\nmodule.exports = intersectCircle;\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n\n},{\"./intersect-ellipse\":12}],12:[function(require,module,exports){\nmodule.exports = intersectEllipse;\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return {x: cx + dx, y: cy + dy};\n}\n\n\n},{}],13:[function(require,module,exports){\nmodule.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2 , r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = (p2.x * p1.y) - (p1.x * p2.y);\n\n  // Compute r3 and r4.\n  r3 = ((a1 * q1.x) + (b1 * q1.y) + c1);\n  r4 = ((a1 * q2.x) + (b1 * q2.y) + c1);\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = (q2.x * q1.y) - (q1.x * q2.y);\n\n  // Compute r1 and r2\n  r1 = (a2 * p1.x) + (b2 * p1.y) + c2;\n  r2 = (a2 * p2.x) + (b2 * p2.y) + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = (a1 * b2) - (a2 * b1);\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = (b1 * c2) - (b2 * c1);\n  x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\n},{}],14:[function(require,module,exports){\nmodule.exports = intersectNode;\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n\n},{}],15:[function(require,module,exports){\nvar intersectLine = require(\"./intersect-line\");\n\nmodule.exports = intersectPolygon;\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY,\n      minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function(entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top =  y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(node, point,\n      {x: left + p1.x, y: top + p1.y}, {x: left + p2.x, y: top + p2.y});\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log(\"NO INTERSECTION FOUND, RETURN NODE CENTER\", node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function(p, q) {\n      var pdx = p.x - point.x,\n          pdy = p.y - point.y,\n          distp = Math.sqrt(pdx * pdx + pdy * pdy),\n\n          qdx = q.x - point.x,\n          qdy = q.y - point.y,\n          distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return (distp < distq) ? -1 : (distp === distq ? 0 : 1);\n    });\n  }\n  return intersections[0];\n}\n\n},{\"./intersect-line\":13}],16:[function(require,module,exports){\nmodule.exports = intersectRect;\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return {x: x + sx, y: y + sy};\n}\n\n},{}],17:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addHtmlLabel;\n\nfunction addHtmlLabel(root, node) {\n  var fo = root\n    .append(\"foreignObject\")\n      .attr(\"width\", \"100000\");\n\n  var div = fo\n    .append(\"xhtml:div\");\n  div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n\n  var label = node.label;\n  switch(typeof label) {\n    case \"function\":\n      div.insert(label);\n      break;\n    case \"object\":\n      // Currently we assume this is a DOM object.\n      div.insert(function() { return label; });\n      break;\n    default: div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"inline-block\");\n  // Fix for firefox\n  div.style(\"white-space\", \"nowrap\");\n\n  var client = div[0][0].getBoundingClientRect();\n  fo\n    .attr(\"width\", client.width)\n    .attr(\"height\", client.height); \n\n  return fo;\n}\n\n},{\"../util\":27}],18:[function(require,module,exports){\nvar addTextLabel = require(\"./add-text-label\"),\n    addHtmlLabel = require(\"./add-html-label\"),\n    addSVGLabel  = require(\"./add-svg-label\");\n\nmodule.exports = addLabel;\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append(\"g\");\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === \"svg\") {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== \"string\" || node.labelType === \"html\") {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch(location) {\n    case \"top\":\n      y = (-node.height / 2);\n      break;\n    case \"bottom\":\n      y = (node.height / 2) - labelBBox.height;\n      break;\n    default:\n      y = (-labelBBox.height / 2);\n  }\n  labelSvg.attr(\"transform\",\n                \"translate(\" + (-labelBBox.width / 2) + \",\" + y + \")\");\n\n  return labelSvg;\n}\n\n},{\"./add-html-label\":17,\"./add-svg-label\":19,\"./add-text-label\":20}],19:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addSVGLabel;\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\n},{\"../util\":27}],20:[function(require,module,exports){\nvar util = require(\"../util\");\n\nmodule.exports = addTextLabel;\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append(\"text\");\n\n  var lines = processEscapeSequences(node.label).split(\"\\n\");\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append(\"tspan\")\n        .attr(\"xml:space\", \"preserve\")\n        .attr(\"dy\", \"1em\")\n        .attr(\"x\", \"1\")\n        .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = \"\",\n      escaped = false,\n      ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch(ch) {\n        case \"n\": newText += \"\\n\"; break;\n        default: newText += ch;\n      }\n      escaped = false;\n    } else if (ch === \"\\\\\") {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n\n},{\"../util\":27}],21:[function(require,module,exports){\n/* global window */\n\nvar lodash;\n\nif (require) {\n  try {\n    lodash = require(\"lodash\");\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n\n},{\"lodash\":undefined}],22:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionClusters;\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n      .style(\"opacity\", 1)\n      .attr(\"transform\", translate);\n\n  util.applyTransition(created.selectAll(\"rect\"), g)\n      .attr(\"width\", function(v) { return g.node(v).width; })\n      .attr(\"height\", function(v) { return g.node(v).height; })\n      .attr(\"x\", function(v) {\n        var node = g.node(v);\n        return -node.width / 2;\n      })\n      .attr(\"y\", function(v) {\n        var node = g.node(v);\n        return -node.height / 2;\n      });\n\n}\n\n},{\"./d3\":7,\"./util\":27}],23:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\"),\n    _ = require(\"./lodash\");\n\nmodule.exports = positionEdgeLabels;\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, \"x\") ? \"translate(\" + edge.x + \",\" + edge.y + \")\" : \"\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n\n},{\"./d3\":7,\"./lodash\":21,\"./util\":27}],24:[function(require,module,exports){\n\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionNodes;\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n\n},{\"./d3\":7,\"./util\":27}],25:[function(require,module,exports){\nvar _ = require(\"./lodash\"),\n    layout = require(\"./dagre\").layout;\n\nmodule.exports = render;\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var createNodes = require(\"./create-nodes\"),\n      createClusters = require(\"./create-clusters\"),\n      createEdgeLabels = require(\"./create-edge-labels\"),\n      createEdgePaths = require(\"./create-edge-paths\"),\n      positionNodes = require(\"./position-nodes\"),\n      positionEdgeLabels = require(\"./position-edge-labels\"),\n      positionClusters = require(\"./position-clusters\"),\n      shapes = require(\"./shapes\"),\n      arrows = require(\"./arrows\");\n\n  var fn = function(svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, \"output\"),\n        clustersGroup = createOrSelectGroup(outputGroup, \"clusters\"),\n        edgePathsGroup = createOrSelectGroup(outputGroup, \"edgePaths\"),\n        edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, \"edgeLabels\"), g),\n        nodes = createNodes(createOrSelectGroup(outputGroup, \"nodes\"), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function(value) {\n    if (!arguments.length) return createNodes;\n    createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function(value) {\n    if (!arguments.length) return createClusters;\n    createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function(value) {\n    if (!arguments.length) return createEdgeLabels;\n    createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function(value) {\n    if (!arguments.length) return createEdgePaths;\n    createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function(value) {\n    if (!arguments.length) return shapes;\n    shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function(value) {\n    if (!arguments.length) return arrows;\n    arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: \"rect\"\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: \"normal\",\n  lineInterpolate: \"linear\"\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function(v) {\n    var node = g.node(v);\n    if (!_.has(node, \"label\") && !g.children(v).length) { node.label = v; }\n\n    if (_.has(node, \"paddingX\")) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX\n      });\n    }\n\n    if (_.has(node, \"paddingY\")) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY\n      });\n    }\n\n    if (_.has(node, \"padding\")) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each([\"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingBottom\"], function(k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, \"width\")) { node._prevWidth = node.width; }\n    if (_.has(node, \"height\")) { node._prevHeight = node.height; }\n  });\n\n  g.edges().forEach(function(e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, \"label\")) { edge.label = \"\"; }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, \"_prevWidth\")) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, \"_prevHeight\")) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select(\"g.\" + name);\n  if (selection.empty()) {\n    selection = root.append(\"g\").attr(\"class\", name);\n  }\n  return selection;\n}\n\n},{\"./arrows\":2,\"./create-clusters\":3,\"./create-edge-labels\":4,\"./create-edge-paths\":5,\"./create-nodes\":6,\"./dagre\":8,\"./lodash\":21,\"./position-clusters\":22,\"./position-edge-labels\":23,\"./position-nodes\":24,\"./shapes\":26}],26:[function(require,module,exports){\n\"use strict\";\n\nvar intersectRect = require(\"./intersect/intersect-rect\"),\n    intersectEllipse = require(\"./intersect/intersect-ellipse\"),\n    intersectCircle = require(\"./intersect/intersect-circle\"),\n    intersectPolygon = require(\"./intersect/intersect-polygon\");\n\nmodule.exports = {\n  rect: rect,\n  ellipse: ellipse,\n  circle: circle,\n  diamond: diamond\n};\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent.insert(\"rect\", \":first-child\")\n        .attr(\"rx\", node.rx)\n        .attr(\"ry\", node.ry)\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"width\", bbox.width)\n        .attr(\"height\", bbox.height);\n\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2,\n      ry = bbox.height / 2,\n      shapeSvg = parent.insert(\"ellipse\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"rx\", rx)\n        .attr(\"ry\", ry);\n\n  node.intersect = function(point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2,\n      shapeSvg = parent.insert(\"circle\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"r\", r);\n\n  node.intersect = function(point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2,\n      h = (bbox.height * Math.SQRT2) / 2,\n      points = [\n        { x:  0, y: -h },\n        { x: -w, y:  0 },\n        { x:  0, y:  h },\n        { x:  w, y:  0 }\n      ],\n      shapeSvg = parent.insert(\"polygon\", \":first-child\")\n        .attr(\"points\", points.map(function(p) { return p.x + \",\" + p.y; }).join(\" \"));\n\n  node.intersect = function(p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n\n},{\"./intersect/intersect-circle\":11,\"./intersect/intersect-ellipse\":12,\"./intersect/intersect-polygon\":15,\"./intersect/intersect-rect\":16}],27:[function(require,module,exports){\nvar _ = require(\"./lodash\");\n\n// Public utility functions\nmodule.exports = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n};\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + \":\" + escapeId(e.w) + \":\" + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, \"\\\\:\") : \"\";\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom\n      .attr(\"class\", classFn)\n      .attr(\"class\", otherClasses + \" \" + dom.attr(\"class\"));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n\n},{\"./lodash\":21}],28:[function(require,module,exports){\nmodule.exports = \"0.4.18-pre\";\n\n},{}]},{},[1])(1)\n});\n\n","var util = require(\"./util\");\n\nmodule.exports = {\n  \"default\": normal,\n  \"normal\": normal,\n  \"vee\": vee,\n  \"undirected\": undirected\n};\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 0 L 10 5 L 0 10 L 4 5 z\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent.append(\"marker\")\n    .attr(\"id\", id)\n    .attr(\"viewBox\", \"0 0 10 10\")\n    .attr(\"refX\", 9)\n    .attr(\"refY\", 5)\n    .attr(\"markerUnits\", \"strokeWidth\")\n    .attr(\"markerWidth\", 8)\n    .attr(\"markerHeight\", 6)\n    .attr(\"orient\", \"auto\");\n\n  var path = marker.append(\"path\")\n    .attr(\"d\", \"M 0 5 L 10 5\")\n    .style(\"stroke-width\", 1)\n    .style(\"stroke-dasharray\", \"1,0\");\n  util.applyStyle(path, edge[type + \"Style\"]);\n  if (edge[type + \"Class\"]) {\n    path.attr(\"class\", edge[type + \"Class\"]);\n  }\n}\n","var util = require(\"./util\"),\n    addLabel = require(\"./label/add-label\");\n\nmodule.exports = createClusters;\n\nfunction createClusters(selection, g) {\n  var clusters = g.nodes().filter(function(v) { return util.isSubgraph(g, v); }),\n      svgClusters = selection.selectAll(\"g.cluster\")\n        .data(clusters, function(v) { return v; });\n\n  svgClusters.selectAll(\"*\").remove();\n  svgClusters.enter()\n    .append(\"g\")\n      .attr(\"class\", \"cluster\")\n      .attr(\"id\",function(v){\n          var node = g.node(v);\n          return node.id;\n      })\n      .style(\"opacity\", 0);\n\n  util.applyTransition(svgClusters, g)\n    .style(\"opacity\", 1);\n\n  svgClusters.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this);\n    d3.select(this).append(\"rect\");\n    var labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\");\n    addLabel(labelGroup, node, node.clusterLabelPos);\n  });\n\n  svgClusters.selectAll(\"rect\").each(function(c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  util.applyTransition(svgClusters.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgClusters;\n}\n","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createEdgeLabels;\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll(\"g.edgeLabel\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  svgEdgeLabels.selectAll(\"*\").remove();\n  svgEdgeLabels.enter()\n    .append(\"g\")\n      .classed(\"edgeLabel\", true)\n      .style(\"opacity\", 0);\n  svgEdgeLabels.each(function(e) {\n    var edge = g.edge(e),\n        label = addLabel(d3.select(this), g.edge(e), 0, 0).classed(\"label\", true),\n        bbox = label.node().getBBox();\n\n    if (edge.labelId) { label.attr(\"id\", edge.labelId); }\n    if (!_.has(edge, \"width\")) { edge.width = bbox.width; }\n    if (!_.has(edge, \"height\")) { edge.height = bbox.height; }\n  });\n\n  util.applyTransition(svgEdgeLabels.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgEdgeLabels;\n}\n","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    intersectNode = require(\"./intersect/intersect-node\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\nmodule.exports = createEdgePaths;\n\nfunction createEdgePaths(selection, g, arrows) {\n  var svgPaths = selection.selectAll(\"g.edgePath\")\n    .data(g.edges(), function(e) { return util.edgeToId(e); })\n    .classed(\"update\", true);\n\n  // Update the first point in the edge so it is shown in the correct category.\n  adjustEdgeForCategories(g);\n\n  enter(svgPaths, g);\n  exit(svgPaths, g);\n\n  util.applyTransition(svgPaths, g)\n    .style(\"opacity\", 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function(e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr(\"id\", edge.id);\n    }\n\n    util.applyClass(domEdge, edge[\"class\"],\n      (domEdge.classed(\"update\") ? \"update \" : \"\") + \"edgePath\");\n  });\n\n  svgPaths.selectAll(\"path.path\")\n    .each(function(e) {\n      var edge = g.edge(e);\n      edge.arrowheadId = _.uniqueId(\"arrowhead\");\n\n      var domEdge = d3.select(this)\n        .attr(\"marker-end\", function() {\n            return \"url(\" + makeFragmentRef(location.href, edge.arrowheadId) + \")\";\n        })\n        .style(\"fill\", \"none\");\n\n      util.applyTransition(domEdge, g)\n        .attr(\"d\", function(e) { return calcPoints(g, e); });\n\n      util.applyStyle(domEdge, edge.style);\n    });\n\n  svgPaths.selectAll(\"defs *\").remove();\n  svgPaths.selectAll(\"defs\")\n    .each(function(e) {\n      var edge = g.edge(e),\n          arrowhead = arrows[edge.arrowhead];\n      arrowhead(d3.select(this), edge.arrowheadId, edge, \"arrowhead\");\n    });\n\n  return svgPaths;\n}\n\nfunction adjustEdgeForCategories(g) {\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e),\n        source = g.node(e.v);\n    // Only perform this adjustment if the edge & source node has the required\n    // properties.\n    if (!edge.hasOwnProperty(\"categoryIndex\")\n        || !source.hasOwnProperty(\"numCategories\")) {\n      return;\n    }\n\n    var edgesInCategory = g.outEdges(e.v).filter(inSameCategory(g, e));\n    var categoryIndex = edgesInCategory.indexOf(e);\n    var pctPlacement = (categoryIndex + 1)/(edgesInCategory.length + 1);\n    var categoryWidth = source.width/source.numCategories;\n    var nodeStartXPos = source.x - source.width/2;\n\n    // Assign a new x value for the first point so it is in the correct category.\n    edge.points[0].x = nodeStartXPos + categoryWidth * edge.categoryIndex\n        + pctPlacement * categoryWidth;\n  });\n}\n\nfunction inSameCategory(g, e1) {\n  return function(e2) {\n    return g.edge(e1).categoryIndex === g.edge(e2).categoryIndex;\n  };\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split(\"#\")[0];\n  return baseUrl + \"#\" + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e),\n      tail = g.node(e.v),\n      head = g.node(e.w);\n  var points;\n  if (edge.hasOwnProperty(\"categoryIndex\")\n      && tail.hasOwnProperty(\"numCategories\")) {\n    points = edge.points.slice(0, edge.points.length - 1);\n  } else {\n    points = edge.points.slice(1, edge.points.length - 1);\n    points.unshift(intersectNode(tail, points[0]));\n  }\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  var line = d3.svg.line()\n    .x(function(d) { return d.x; })\n    .y(function(d) { return d.y; });\n\n  if (_.has(edge, \"lineInterpolate\")) {\n    line.interpolate(edge.lineInterpolate);\n  }\n\n  if (_.has(edge, \"lineTension\")) {\n    line.tension(Number(edge.lineTension));\n  }\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox(),\n      matrix = elem.ownerSVGElement.getScreenCTM()\n        .inverse()\n        .multiply(elem.getScreenCTM())\n        .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter()\n    .append(\"g\")\n      .attr(\"class\", \"edgePath\")\n      .style(\"opacity\", 0);\n  svgPathsEnter.append(\"path\")\n    .attr(\"class\", \"path\")\n    .attr(\"d\", function(e) {\n      var edge = g.edge(e),\n          sourceElem = g.node(e.v).elem,\n          points = _.range(edge.points.length).map(function() { return getCoords(sourceElem); });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append(\"defs\");\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  util.applyTransition(svgPathExit.select(\"path.path\"), g)\n    .attr(\"d\", function(e) {\n      var source = g.node(e.v);\n\n      if (source) {\n        var points = _.range(this.getTotalLength()).map(function() { return source; });\n        return createLine({}, points);\n      } else {\n        return d3.select(this).attr(\"d\");\n      }\n    });\n}\n","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    addLabel = require(\"./label/add-label\"),\n    util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = createNodes;\n\nfunction createNodes(selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function(v) { return !util.isSubgraph(g, v); });\n  var svgNodes = selection.selectAll(\"g.node\")\n    .data(simpleNodes, function(v) { return v; })\n    .classed(\"update\", true);\n\n  svgNodes.selectAll(\"*\").remove();\n  svgNodes.enter()\n    .append(\"g\")\n      .attr(\"class\", \"node\")\n      .style(\"opacity\", 0);\n  svgNodes.each(function(v) {\n    var node = g.node(v),\n        thisGroup = d3.select(this),\n        labelGroup = thisGroup.append(\"g\").attr(\"class\", \"label\"),\n        labelDom = addLabel(labelGroup, node),\n        shape = shapes[node.shape],\n        bbox = _.pick(labelDom.node().getBBox(), \"width\", \"height\");\n\n    node.elem = this;\n\n    if (node.id) { thisGroup.attr(\"id\", node.id); }\n    if (node.labelId) { labelGroup.attr(\"id\", node.labelId); }\n    util.applyClass(thisGroup, node[\"class\"],\n      (thisGroup.classed(\"update\") ? \"update \" : \"\") + \"node\");\n\n    if (_.has(node, \"width\")) { bbox.width = node.width; }\n    if (_.has(node, \"height\")) { bbox.height = node.height; }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\"transform\", \"translate(\" +\n      ((node.paddingLeft - node.paddingRight) / 2) + \",\" +\n      ((node.paddingTop - node.paddingBottom) / 2) + \")\");\n\n    var shapeSvg = shape(d3.select(this), bbox, node);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  util.applyTransition(svgNodes.exit(), g)\n    .style(\"opacity\", 0)\n    .remove();\n\n  return svgNodes;\n}\n","// Stub to get D3 either via NPM or from the global object\nmodule.exports = window.d3;\n","/* global window */\n\nvar dagre;\n\nif (require) {\n  try {\n    dagre = require(\"dagre\");\n  } catch (e) {}\n}\n\nif (!dagre) {\n  dagre = window.dagre;\n}\n\nmodule.exports = dagre;\n","/* global window */\n\nvar graphlib;\n\nif (require) {\n  try {\n    graphlib = require(\"graphlib\");\n  } catch (e) {}\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;\n","module.exports = {\n  node: require(\"./intersect-node\"),\n  circle: require(\"./intersect-circle\"),\n  ellipse: require(\"./intersect-ellipse\"),\n  polygon: require(\"./intersect-polygon\"),\n  rect: require(\"./intersect-rect\")\n};\n","var intersectEllipse = require(\"./intersect-ellipse\");\n\nmodule.exports = intersectCircle;\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n","module.exports = intersectEllipse;\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return {x: cx + dx, y: cy + dy};\n}\n\n","module.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2 , r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = (p2.x * p1.y) - (p1.x * p2.y);\n\n  // Compute r3 and r4.\n  r3 = ((a1 * q1.x) + (b1 * q1.y) + c1);\n  r4 = ((a1 * q2.x) + (b1 * q2.y) + c1);\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = (q2.x * q1.y) - (q1.x * q2.y);\n\n  // Compute r1 and r2\n  r1 = (a2 * p1.x) + (b2 * p1.y) + c2;\n  r2 = (a2 * p2.x) + (b2 * p2.y) + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = (a1 * b2) - (a2 * b1);\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = (b1 * c2) - (b2 * c1);\n  x = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  num = (a2 * c1) - (a1 * c2);\n  y = (num < 0) ? ((num - offset) / denom) : ((num + offset) / denom);\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n","module.exports = intersectNode;\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n","var intersectLine = require(\"./intersect-line\");\n\nmodule.exports = intersectPolygon;\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY,\n      minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function(entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top =  y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(node, point,\n      {x: left + p1.x, y: top + p1.y}, {x: left + p2.x, y: top + p2.y});\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log(\"NO INTERSECTION FOUND, RETURN NODE CENTER\", node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function(p, q) {\n      var pdx = p.x - point.x,\n          pdy = p.y - point.y,\n          distp = Math.sqrt(pdx * pdx + pdy * pdy),\n\n          qdx = q.x - point.x,\n          qdy = q.y - point.y,\n          distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return (distp < distq) ? -1 : (distp === distq ? 0 : 1);\n    });\n  }\n  return intersections[0];\n}\n","module.exports = intersectRect;\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return {x: x + sx, y: y + sy};\n}\n","var util = require(\"../util\");\n\nmodule.exports = addHtmlLabel;\n\nfunction addHtmlLabel(root, node) {\n  var fo = root\n    .append(\"foreignObject\")\n      .attr(\"width\", \"100000\");\n\n  var div = fo\n    .append(\"xhtml:div\");\n  div.attr(\"xmlns\", \"http://www.w3.org/1999/xhtml\");\n\n  var label = node.label;\n  switch(typeof label) {\n    case \"function\":\n      div.insert(label);\n      break;\n    case \"object\":\n      // Currently we assume this is a DOM object.\n      div.insert(function() { return label; });\n      break;\n    default: div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style(\"display\", \"inline-block\");\n  // Fix for firefox\n  div.style(\"white-space\", \"nowrap\");\n\n  var client = div[0][0].getBoundingClientRect();\n  fo\n    .attr(\"width\", client.width)\n    .attr(\"height\", client.height); \n\n  return fo;\n}\n","var addTextLabel = require(\"./add-text-label\"),\n    addHtmlLabel = require(\"./add-html-label\"),\n    addSVGLabel  = require(\"./add-svg-label\");\n\nmodule.exports = addLabel;\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append(\"g\");\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === \"svg\") {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== \"string\" || node.labelType === \"html\") {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch(location) {\n    case \"top\":\n      y = (-node.height / 2);\n      break;\n    case \"bottom\":\n      y = (node.height / 2) - labelBBox.height;\n      break;\n    default:\n      y = (-labelBBox.height / 2);\n  }\n  labelSvg.attr(\"transform\",\n                \"translate(\" + (-labelBBox.width / 2) + \",\" + y + \")\");\n\n  return labelSvg;\n}\n","var util = require(\"../util\");\n\nmodule.exports = addSVGLabel;\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n","var util = require(\"../util\");\n\nmodule.exports = addTextLabel;\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append(\"text\");\n\n  var lines = processEscapeSequences(node.label).split(\"\\n\");\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append(\"tspan\")\n        .attr(\"xml:space\", \"preserve\")\n        .attr(\"dy\", \"1em\")\n        .attr(\"x\", \"1\")\n        .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = \"\",\n      escaped = false,\n      ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch(ch) {\n        case \"n\": newText += \"\\n\"; break;\n        default: newText += ch;\n      }\n      escaped = false;\n    } else if (ch === \"\\\\\") {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n","/* global window */\n\nvar lodash;\n\nif (require) {\n  try {\n    lodash = require(\"lodash\");\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;\n","\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionClusters;\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n      .style(\"opacity\", 1)\n      .attr(\"transform\", translate);\n\n  util.applyTransition(created.selectAll(\"rect\"), g)\n      .attr(\"width\", function(v) { return g.node(v).width; })\n      .attr(\"height\", function(v) { return g.node(v).height; })\n      .attr(\"x\", function(v) {\n        var node = g.node(v);\n        return -node.width / 2;\n      })\n      .attr(\"y\", function(v) {\n        var node = g.node(v);\n        return -node.height / 2;\n      });\n\n}\n","\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\"),\n    _ = require(\"./lodash\");\n\nmodule.exports = positionEdgeLabels;\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, \"x\") ? \"translate(\" + edge.x + \",\" + edge.y + \")\" : \"\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n","\"use strict\";\n\nvar util = require(\"./util\"),\n    d3 = require(\"./d3\");\n\nmodule.exports = positionNodes;\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function() { return !d3.select(this).classed(\"update\"); });\n\n  function translate(v) {\n    var node = g.node(v);\n    return \"translate(\" + node.x + \",\" + node.y + \")\";\n  }\n\n  created.attr(\"transform\", translate);\n\n  util.applyTransition(selection, g)\n    .style(\"opacity\", 1)\n    .attr(\"transform\", translate);\n}\n","var _ = require(\"./lodash\"),\n    layout = require(\"./dagre\").layout;\n\nmodule.exports = render;\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var createNodes = require(\"./create-nodes\"),\n      createClusters = require(\"./create-clusters\"),\n      createEdgeLabels = require(\"./create-edge-labels\"),\n      createEdgePaths = require(\"./create-edge-paths\"),\n      positionNodes = require(\"./position-nodes\"),\n      positionEdgeLabels = require(\"./position-edge-labels\"),\n      positionClusters = require(\"./position-clusters\"),\n      shapes = require(\"./shapes\"),\n      arrows = require(\"./arrows\");\n\n  var fn = function(svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, \"output\"),\n        clustersGroup = createOrSelectGroup(outputGroup, \"clusters\"),\n        edgePathsGroup = createOrSelectGroup(outputGroup, \"edgePaths\"),\n        edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, \"edgeLabels\"), g),\n        nodes = createNodes(createOrSelectGroup(outputGroup, \"nodes\"), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function(value) {\n    if (!arguments.length) return createNodes;\n    createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function(value) {\n    if (!arguments.length) return createClusters;\n    createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function(value) {\n    if (!arguments.length) return createEdgeLabels;\n    createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function(value) {\n    if (!arguments.length) return createEdgePaths;\n    createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function(value) {\n    if (!arguments.length) return shapes;\n    shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function(value) {\n    if (!arguments.length) return arrows;\n    arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: \"rect\"\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: \"normal\",\n  lineInterpolate: \"linear\"\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function(v) {\n    var node = g.node(v);\n    if (!_.has(node, \"label\") && !g.children(v).length) { node.label = v; }\n\n    if (_.has(node, \"paddingX\")) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX\n      });\n    }\n\n    if (_.has(node, \"paddingY\")) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY\n      });\n    }\n\n    if (_.has(node, \"padding\")) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each([\"paddingLeft\", \"paddingRight\", \"paddingTop\", \"paddingBottom\"], function(k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, \"width\")) { node._prevWidth = node.width; }\n    if (_.has(node, \"height\")) { node._prevHeight = node.height; }\n  });\n\n  g.edges().forEach(function(e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, \"label\")) { edge.label = \"\"; }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function(v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, \"_prevWidth\")) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, \"_prevHeight\")) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select(\"g.\" + name);\n  if (selection.empty()) {\n    selection = root.append(\"g\").attr(\"class\", name);\n  }\n  return selection;\n}\n","\"use strict\";\n\nvar intersectRect = require(\"./intersect/intersect-rect\"),\n    intersectEllipse = require(\"./intersect/intersect-ellipse\"),\n    intersectCircle = require(\"./intersect/intersect-circle\"),\n    intersectPolygon = require(\"./intersect/intersect-polygon\");\n\nmodule.exports = {\n  rect: rect,\n  ellipse: ellipse,\n  circle: circle,\n  diamond: diamond\n};\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent.insert(\"rect\", \":first-child\")\n        .attr(\"rx\", node.rx)\n        .attr(\"ry\", node.ry)\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"width\", bbox.width)\n        .attr(\"height\", bbox.height);\n\n  node.intersect = function(point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2,\n      ry = bbox.height / 2,\n      shapeSvg = parent.insert(\"ellipse\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"rx\", rx)\n        .attr(\"ry\", ry);\n\n  node.intersect = function(point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2,\n      shapeSvg = parent.insert(\"circle\", \":first-child\")\n        .attr(\"x\", -bbox.width / 2)\n        .attr(\"y\", -bbox.height / 2)\n        .attr(\"r\", r);\n\n  node.intersect = function(point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2,\n      h = (bbox.height * Math.SQRT2) / 2,\n      points = [\n        { x:  0, y: -h },\n        { x: -w, y:  0 },\n        { x:  0, y:  h },\n        { x:  w, y:  0 }\n      ],\n      shapeSvg = parent.insert(\"polygon\", \":first-child\")\n        .attr(\"points\", points.map(function(p) { return p.x + \",\" + p.y; }).join(\" \"));\n\n  node.intersect = function(p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n","var _ = require(\"./lodash\");\n\n// Public utility functions\nmodule.exports = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n};\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + \":\" + escapeId(e.w) + \":\" + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, \"\\\\:\") : \"\";\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr(\"style\", styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom\n      .attr(\"class\", classFn)\n      .attr(\"class\", otherClasses + \" \" + dom.attr(\"class\"));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n","module.exports = \"0.4.18-pre\";\n"],"sourceRoot":"/source/"}